import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
//import Head from "next/head";

//import Header from "@/components/Header";
//import Footer from "@/components/Footer";
import BackgroundLayout from "@/components/BackgroundLayout";
//import AppBreadcrumbs from "@/components/AppBreadcrumbs";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "FurnitPro",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html className="h-full"/* lang="ua" */>
      {/* <Head>
        <link rel="icon" href="/favicon.ico" />
      </Head> */}
      {/* <head>
        <link rel="icon" href="/favicon.ico" />
      </head> */}
      <head>
        {/* Стандартний favicon */}
        <link rel="icon" href="/favicon.png" />
        {/* PNG favicon для кращої сумісності */}
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="/favicon-32x32.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="16x16"
          href="/favicon-16x16.png"
        />
        {/* Apple Touch Icon для iOS */}
        <link
          rel="apple-touch-icon"
          sizes="180x180"
          href="/apple-touch-icon.png"
        />
        {/* Можна додати manifest для PWA */}
        {/* <link rel="manifest" href="/site.webmanifest" /> */}
      </head>
      {/* <AppBreadcrumbs/> */}
      <body
        className={`${geistSans.variable} ${geistMono.variable}  h-full`}
      >
        {/* <Header /> */}
        {/* <main className="flex-grow"> */}
        <BackgroundLayout>{children}</BackgroundLayout>
        {/* </main> */}
        {/* <Footer /> */}
      </body>
    </html>
  );
}
