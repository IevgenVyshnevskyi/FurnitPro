import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
//import "./globals.css";
import { NextIntlClientProvider } from "next-intl";

import Header from "@/components/Header";
import Footer from "@/components/Footer";
import { notFound } from "next/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>; // üëà —Ç—É—Ç Promise
}>) {
  const { locale } = await params; // üëà –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ await
  let messages;
  try {
    //messages = (await import(`../../messages/${locale}.json`)).default;
    messages = (await import(`../../../messages/${locale}.json`)).default;
  } catch (error) {
    notFound();
  }
  return (
    //<html /* lang="ua" */>
     /*  <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      > */
        <NextIntlClientProvider locale={locale} messages={messages}>
          <Header />
          <main className="flex-grow">{children}</main>
          <Footer />
        </NextIntlClientProvider>
      /* </body> */
    //</html>
  );
}

/* import * as React from "react";
import { ReactNode } from "react";
import { NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";
import Header from "@/components/Header";

type Props = {
  children: ReactNode;
  params: { locale: string };
}; */

/* export default async function LocaleLayout({ children, params }: Props) { */
// await params, —è–∫—â–æ –≤–æ–Ω–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ñ
//const params = await props.params;

//const locale = params.locale;
/*  console.log("params: ", params); */
/*   console.log("params.locale: ", params.locale);
  const { id } = React.use(params); */

/* let messages;
  try {
    messages = (await import(`../../../messages/${params.locale}.json`)).default; */
//messages = (await import(`../../messages/${locale}.json`)).default;
/*   } catch {
    notFound();
  }
 */
/* return (
    <html lang={`${params.locale}`}>
      <body>
        <NextIntlClientProvider locale={`${params.locale}`} messages={messages}>
          <Header />
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
 */
